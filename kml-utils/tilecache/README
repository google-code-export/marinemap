This directory contains all sorts of goodies to generate and test kml superoverlays using tilecache.

First of all, tilecache requires a small little patch to handle a bug with metatiles and seeding. Replace line 140 of TileCacheService.py with:
    else:pass #raise Exception("Zero length data returned from layer.") 

Next, install tilecache (standard 'sudo python setup.py install').

The tilecache.cfg file defines the layers and caching method. For mapnik layers, use the example included to point to the appropriate mapnik xml file.

To run the development server, just use './tilecache_http_server.py' which runs on localhost:8080

The initial_uk.kml file shows how you would load the first kml into GE. From there the images and kml files are dynamically generated by tilecache. This is great for testing. If you want to clear the cache, just delete the /tmp/tilecache/<layer> directory.

At some point we'll want to put the tiles into production so we'll need to seed (ie pre-render) the tiles. Do this via the tilecache_seed.py script like 'python tilecache_seed.py <layer> 0 16'. In this example, tiles will be generated for zoom levels 0 to 16 for the specified layer.

Once a tiled map service (TMS) disk cache is created, use the tmsdisk2kml.py script to generate the kml files. This script may require some hacking at the moment.
